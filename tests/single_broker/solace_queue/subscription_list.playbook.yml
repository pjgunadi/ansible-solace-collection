# Copyright (c) 2021, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

-
  name: "solace_queue_subscription_list"
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  collections:
    - solace.pubsub_plus
  module_defaults:
    solace.pubsub_plus.solace_queue:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
      reverse_proxy: "{{ semp_reverse_proxy | default(omit) }}"
    solace.pubsub_plus.solace_queue_subscriptions:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
      reverse_proxy: "{{ semp_reverse_proxy | default(omit) }}"
    solace.pubsub_plus.solace_get_queue_subscriptions:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
      reverse_proxy: "{{ semp_reverse_proxy | default(omit) }}"
  pre_tasks:
  - include_vars:
      file: "queue-subscription-list.vars.yml"
      name: target_list
  tasks:
    - name: "call subscription list tasks"
      include_tasks: ./tasks/queue-subscription-list.tasks.yml
      loop: "{{ target_list.queues }}"
      loop_control:
        loop_var: queue_item

    - name: "delete queues"
      solace_queue:
        name: "{{ item.name }}"
        state: absent
      loop: "{{ target_list.queues }}"

    # generate sample result for doc
    - name: delete queue
      solace_queue:
        name: q/doc-sample
        state: absent

    - name: create queue
      solace_queue:
        name: q/doc-sample
        state: present

    - name: doc prep
      solace_queue_subscriptions:
        queue_name: q/doc-sample
        subscription_topics:
          - topic-1
          - topic-2
          - topic-3
          - topic-4
          - topic-5
        state: present

    - name: doc
      solace_queue_subscriptions:
        queue_name: q/doc-sample
        subscription_topics:
          - topic-6
          - topic-7
          - duplicate-topic
          - duplicate-topic
          # - /invalid-topic
        state: exactly
      ignore_errors: yes
      register: result

    - name: save good response
      copy:
        content: "{{ result.response | to_nice_yaml }}"
        dest: "{{ WORKING_DIR }}/DOC_SAMPLE.solace_queue_subscriptions.success-response.yml"
      delegate_to: localhost

    - name: delete queue
      solace_queue:
        name: q/doc-sample
        state: absent


###
# The End.
