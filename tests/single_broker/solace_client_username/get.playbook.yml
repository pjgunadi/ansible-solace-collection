# Copyright (c) 2020, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
-
  name: "get: solace_get_queues"
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  collections:
    - solace.pubsub_plus
  module_defaults:
    solace.pubsub_plus.solace_client_username:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
    solace.pubsub_plus.solace_get_client_usernames:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
  pre_tasks:
  - include_vars:
      file: "client_usernames.vars.yml"
      name: target_list
  tasks:

    - name: "main: solace_client_username: remove all"
      solace_client_username:
        name: "{{ item.name }}"
        state: absent
      loop: "{{ target_list.clientUsernames }}"

    - name: "get: solace_get_client_usernames(config, all)"
      solace_get_client_usernames:
      register: result
    - assert:
        that:
          - result.rc==0
          - result.result_list | length > 0
          - result.result_list_count > 0

    - name: "get: solace_get_client_usernames(config, target_list)"
      solace_get_client_usernames:
        query_params:
          where:
            - "clientUsername=={{ target_list.search_pattern }}"
      register: result
    - assert:
        that:
          - result.rc==0
          - result.result_list==[]
          - result.result_list_count==0

    - name: "get: solace_client_username: creating all"
      solace_client_username:
        name: "{{ item.name }}"
        state: present
      loop: "{{ target_list.clientUsernames }}"

    - name: "get: solace_get_client_usernames(config, target_list)"
      solace_get_client_usernames:
        query_params:
          where:
            - "clientUsername=={{ target_list.search_pattern }}"
      register: result
    - assert:
        that:
          - result.rc==0
          - result.result_list | length == 3
          - result.result_list_count==3

    - name: "get: solace_get_client_usernames(monitor, target_list)"
      solace_get_client_usernames:
        api: monitor
        query_params:
          where:
            - "clientUsername=={{ target_list.search_pattern }}"
      register: result
    - assert:
        that:
          - result.rc==0
          - result.result_list | length == 3
          - result.result_list_count==3

    - name: "main: solace_client_username: remove all"
      solace_client_username:
        name: "{{ item.name }}"
        state: absent
      loop: "{{ target_list.clientUsernames }}"

    - name: "get: solace_get_client_usernames(config, all)"
      solace_get_client_usernames:
      register: result
    - assert:
        that:
          - result.rc==0
          - result.result_list | length > 0
          - result.result_list_count > 0

###
# The End.
