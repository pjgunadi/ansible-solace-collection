# Copyright (c) 2020, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

-
  name: "TEST: QoS=1 subscriptions, MQTT Queue = on"
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  collections:
    - solace.pubsub_plus
  module_defaults:
    solace.pubsub_plus.solace_client_username:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
    solace.pubsub_plus.solace_mqtt_session:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
      virtual_router: "{{ virtual_router }}"
    solace.pubsub_plus.solace_mqtt_session_subscription:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
      virtual_router: "{{ virtual_router }}"
    solace.pubsub_plus.solace_get_mqtt_sessions:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
    solace.pubsub_plus.solace_get_mqtt_session_subscriptions:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
      virtual_router: "{{ virtual_router }}"
    solace.pubsub_plus.solace_get_magic_queues:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
  pre_tasks:
  - include_vars:
      file: "mqtt-qos1.vars.yml"
      name: mqtt
  vars:
    mqtt_client_username: "ansible_solace_test_mqtt_qos_1_cu"

  tasks:

    - name: "qos1: solace_client_username: create"
      solace_client_username:
        name: "{{ mqtt_client_username }}"
        settings:
          aclProfileName: "default"
          clientProfileName: "default"
          password: "{{ mqtt_client_username }}"
        state: present

    - name: "qos1: include mqtt-qos1.tasks"
      include_tasks: ./tasks/mqtt-qos1.tasks.yml
      loop: "{{ mqtt.mqtt_sessions }}"
      loop_control:
        loop_var: mqtt_session

    - name: "qos1: solace_get_magic_queues(mqtt)"
      solace_get_magic_queues:
        where_name: "#mqtt/*"
      register: result
    - assert:
        that:
          - "result.rc == 0"
          - "result.result_list_count == 3"
          - "result.result_list | length == 3"

    - set_fact:
        magic_queues: "{{ result.result_list }}"

    - name: "qos1: Check all magic queues are ON/ON"
      fail:
        msg: "Magic queue: ingress or egress is 'Down' for magic_queue: {{ magic_queue.name }} "
      when: magic_queue.info['ingress-config-status'] == "Down" or magic_queue.info['egress-config-status'] == "Down"
      loop: "{{ magic_queues }}"
      loop_control:
        loop_var: magic_queue


###
# The End.
