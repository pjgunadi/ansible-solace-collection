# Copyright (c) 2020, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

-
  name: "main: solace_vpn"
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  collections:
    - solace.pubsub_plus
  module_defaults:
    solace.pubsub_plus.solace_vpn:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      solace_cloud_api_token: "{{ SOLACE_CLOUD_API_TOKEN if broker_type=='solace_cloud' else omit }}"
      solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"
    solace.pubsub_plus.solace_get_vpns:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
  pre_tasks:
  - include_vars:
      file: "vpn.vars.yml"
  tasks:
    - name: "end play for == solace_cloud"
      meta: end_play
      when: broker_type == 'solace_cloud'

    - name: "main: call tasks: vpn.tasks"
      include_tasks: ./tasks/vpn.tasks.yml
      register: result
      loop: "{{ vpns }}"
      loop_control:
        loop_var: msg_vpn

    - name: "main: get vpns config"
      solace_get_vpns:
        api: config
        query_params:
          where:
            - "msgVpnName==asc_test_vpn*"
          # select:
          #   - "msgVpnName"
          #   - "maxEndpointCount"
      register: result

    - name: "main: get vpns monitor"
      solace_get_vpns:
        api: monitor
        query_params:
          where:
            - "msgVpnName==asc_test_vpn*"
          # select:
          #   - "msgVpnName"
          #   - "maxEndpointCount"
      register: result

    - name: "main: remove vpn"
      solace_vpn:
        name: "{{ msg_vpn.name }}"
        state: absent
      loop: "{{ vpns }}"
      loop_control:
        loop_var: msg_vpn


###
# The End.
