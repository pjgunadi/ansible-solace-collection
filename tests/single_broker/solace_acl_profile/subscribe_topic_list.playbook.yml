# Copyright (c) 2021, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

-
  name: "subscribe_topic_list"
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  collections:
    - solace.pubsub_plus
  module_defaults:
    solace.pubsub_plus.solace_acl_profile:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
      reverse_proxy: "{{ semp_reverse_proxy | default(omit) }}"
    solace.pubsub_plus.solace_acl_subscribe_topic_exceptions:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
      reverse_proxy: "{{ semp_reverse_proxy | default(omit) }}"
    solace.pubsub_plus.solace_get_acl_subscribe_topic_exceptions:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
      reverse_proxy: "{{ semp_reverse_proxy | default(omit) }}"
  pre_tasks:
  - include_vars:
      file: "acl-lists.vars.yml"
      name: target_vars
  tasks:
    - set_fact:
        target: "{{ target_vars.good }}"

    - name: delete acl profile
      solace_acl_profile:
        name: "{{ target.acl_profile_name }}"
        state: absent

    - name: create acl profile
      solace_acl_profile:
        name: "{{ target.acl_profile_name }}"
        state: present

    # test present
    - set_fact:
        topic_list_name: present_topics_1
    - set_fact:
        topic_list_name_length: "{{ target[topic_list_name]|length }}"
    - name: "present: {{ topic_list_name }}"
      solace_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
        topics: "{{ target[topic_list_name] }}"
        state: present
    - solace_get_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
      register: result
    - assert:
        that:
          - result.result_list|length == topic_list_name_length|int
          - result.result_list_count == topic_list_name_length|int
    # test present idempotency
    - name: "present:idempotency {{ topic_list_name }}"
      solace_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
        topics: "{{ target[topic_list_name] }}"
        state: present
      register: result
    - assert:
        that:
          - result.changed == False
          - result.response|length == 0

    # test absent
    - name: "absent: {{ topic_list_name }}"
      solace_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
        topics: "{{ target[topic_list_name] }}"
        state: absent
      register: result
    - assert:
        that:
          - result.changed == True
          - result.response|length == topic_list_name_length|int
    # test absent idempotency
    - name: "absent:idempotency: {{ topic_list_name }}"
      solace_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
        topics: "{{ target[topic_list_name] }}"
        state: absent
      register: result
    - assert:
        that:
          - result.changed == False
          - result.response|length == 0

    # test exactly on empty
    - set_fact:
        topic_list_name: exactly_topics_1
    - set_fact:
        topic_list_name_length: "{{ target[topic_list_name]|length }}"
    - name: "exactly:on-empty:{{ topic_list_name }}"
      solace_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
        topics: "{{ target[topic_list_name] }}"
        state: exactly
      register: result
    - assert:
        that:
          - result.changed == True
          - result.response|length == topic_list_name_length|int
    # test exactly idempotency
    - set_fact:
        topic_list_name: exactly_topics_1
    - set_fact:
        topic_list_name_length: "{{ target[topic_list_name]|length }}"
    - name: "exactly:idempotency:{{ topic_list_name }}"
      solace_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
        topics: "{{ target[topic_list_name] }}"
        state: exactly
      register: result
    - assert:
        that:
          - result.changed == False
          - result.response|length == 0
    # test exactly on full
    - set_fact:
        present_topic_list_name: present_topics_1
        exactly_topic_list_name: exactly_topics_1
    - set_fact:
        present_topic_list_name_length: "{{ target[present_topic_list_name]|length }}"
        exactly_topic_list_name_length: "{{ target[exactly_topic_list_name]|length }}"
    - name: "present: {{ present_topic_list_name }}"
      solace_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
        topics: "{{ target[present_topic_list_name] }}"
        state: present
    - name: "exactly:on-full:{{ exactly_topic_list_name }}"
      solace_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
        topics: "{{ target[exactly_topic_list_name] }}"
        state: exactly
      register: result
    - assert:
        that:
          - result.changed == True
    - solace_get_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
      register: result
    - assert:
        that:
          - result.result_list|length == exactly_topic_list_name_length|int
          - result.result_list_count == exactly_topic_list_name_length|int

# SMF & MQTT mix
    - set_fact:
        smf_topic_name_list:
          - syntax/smf/*/_1_/>
          - syntax/smf/*/_2_/>
          - syntax/smf/*/_3_/>
        mqtt_topic_name_list:
          - syntax/mqtt/*/_1_/>
          - syntax/mqtt/*/_2_/>
          - syntax/mqtt/*/_3_/>
          - syntax/mqtt/*/_4_/>

    - name: exactly smf
      solace_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
        topics: "{{ smf_topic_name_list }}"
        topic_syntax: smf
        state: exactly
    - solace_get_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
      register: result
    - assert:
        that:
          - result.result_list|length == smf_topic_name_list|length
          - result.result_list_count == smf_topic_name_list|length

    - name: exactly mqtt
      solace_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
        topics: "{{ mqtt_topic_name_list }}"
        topic_syntax: mqtt
        state: exactly
    - solace_get_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
      register: result
    - assert:
        that:
          - result.result_list|length == mqtt_topic_name_list|length
          - result.result_list_count == mqtt_topic_name_list|length

# SMF & MQTT topics at the same time
    - name: exactly smf
      solace_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
        topics: "{{ smf_topic_name_list }}"
        topic_syntax: smf
        state: exactly
    - name: present mqtt
      solace_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
        topics: "{{ mqtt_topic_name_list }}"
        topic_syntax: mqtt
        state: present
    - solace_get_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
      register: result
    - assert:
        that:
          - result.result_list|length == mqtt_topic_name_list|length + smf_topic_name_list|length
          - result.result_list_count == mqtt_topic_name_list|length + smf_topic_name_list|length

    - name: exactly mqtt
      solace_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
        topics: "{{ mqtt_topic_name_list }}"
        topic_syntax: mqtt
        state: exactly
    - solace_get_acl_subscribe_topic_exceptions:
        acl_profile_name: "{{ target.acl_profile_name }}"
      register: result
    - assert:
        that:
          - result.result_list|length == mqtt_topic_name_list|length
          - result.result_list_count == mqtt_topic_name_list|length

    - name: delete acl profile
      solace_acl_profile:
        name: "{{ target.acl_profile_name }}"
        state: absent

###
# The End.
