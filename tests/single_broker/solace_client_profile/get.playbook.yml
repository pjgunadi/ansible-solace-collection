# Copyright (c) 2020, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

-
  name: "get: solace_client_profiles"
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  collections:
    - solace.pubsub_plus
  module_defaults:
    solace.pubsub_plus.solace_client_profile:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
    solace.pubsub_plus.solace_cloud_client_profile:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      solace_cloud_api_token: "{{ SOLACE_CLOUD_API_TOKEN if broker_type=='solace_cloud' else omit }}"
      solace_cloud_service_id: "{{ solace_cloud_service_id | default(omit) }}"
    solace.pubsub_plus.solace_get_client_profiles:
      host: "{{ sempv2_host }}"
      port: "{{ sempv2_port }}"
      secure_connection: "{{ sempv2_is_secure_connection }}"
      username: "{{ sempv2_username }}"
      password: "{{ sempv2_password }}"
      timeout: "{{ sempv2_timeout }}"
      msg_vpn: "{{ vpn }}"
  pre_tasks:
  - include_vars:
      file: "get.vars.yml"
      name: target_list
  tasks:

  - name: "get: existing client profiles"
    solace_get_client_profiles:
      query_params:
        where:
          - "clientProfileName==ansible-solace__test*"
        select:
          - "clientProfileName"
    register: pre_existing_list

  - name: "get: print pre-existing list"
    debug:
      msg:
        - "{{ pre_existing_list.result_list }}"
        - "{{ pre_existing_list.result_list_count }}"

  - name: "get: remove all found client profiles"
    solace_client_profile:
      name: "{{ item.data.clientProfileName }}"
      state: absent
    register: result
    loop: "{{ pre_existing_list.result_list }}"
    when: broker_type != 'solace_cloud'

  - name: "get: remove all found client profiles - solace cloud"
    solace_cloud_client_profile:
      name: "{{ item.data.clientProfileName }}"
      state: absent
    register: result
    loop: "{{ pre_existing_list.result_list }}"
    when: broker_type == 'solace_cloud'

  # - fail:
  #     msg: continue here - check result list, has data in it?

  - name: "get: add client profiles"
    solace_client_profile:
      name: "{{ item.name }}"
      state: present
    loop: "{{ target_list.clientProfileNames }}"
    when: broker_type != 'solace_cloud'

  - name: "get: add client profiles"
    solace_cloud_client_profile:
      name: "{{ item.name }}"
      state: present
    loop: "{{ target_list.clientProfileNames }}"
    when: broker_type == 'solace_cloud'

  - name: "get: config: get new client profiles"
    solace_get_client_profiles:
      query_params:
        where:
          - "clientProfileName==ansible-solace__test*"
        select:
          - "clientProfileName"
    register: new_list_result

  # - fail:
  #     msg: continue here - check result list, has data in it?

  - name: "get: config: print new client profile list"
    debug:
      msg:
        - "{{ new_list_result.result_list }}"
        - "{{ new_list_result.result_list_count }}"

  - name: "get: config: fail when new client profile list count != 4"
    fail:
      msg: "new client profile list count != 4"
    when: new_list_result.result_list_count != 4

  - name: "get: monitor: info of new client profiles"
    solace_get_client_profiles:
      api: monitor
      query_params:
        where:
          - "clientProfileName==ansible-solace__test*"
        select:
    register: monitor_result

  - name: "get: monitor: print list"
    debug:
      msg:
        - "{{ monitor_result.result_list }}"
        - "{{ monitor_result.result_list_count }}"

  - name: "get: remove all client profiles"
    solace_client_profile:
      name: "{{ item.name }}"
      state: absent
    register: result
    loop: "{{ target_list.clientProfileNames }}"
    when: broker_type != 'solace_cloud'

  - name: "get: remove all client profiles - solace cloud"
    solace_cloud_client_profile:
      name: "{{ item.name }}"
      state: absent
    register: result
    loop: "{{ target_list.clientProfileNames }}"
    when: broker_type == 'solace_cloud'

###
# The End.
