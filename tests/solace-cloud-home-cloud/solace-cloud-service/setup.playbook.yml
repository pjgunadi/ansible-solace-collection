# Copyright (c) 2022, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

-
  name: "Create Solace Cloud Services"
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  collections:
    - solace.pubsub_plus
  pre_tasks:
  - include_vars:
      file: "solace-cloud-service.vars.yml"
      name: sc_services
  - include_vars:
      file: "env.vars.yml"
      name: env
  tasks:
    - name: "Check vars"
      set_fact:
        working_dir: "{{ WORKING_DIR }}"
        sc_created_inventory_file: "{{ WORKING_DIR }}/{{ SOLACE_CLOUD_INVENTORY_FILE_NAME }}"
        solace_cloud_home_cloud: "{{ ANSIBLE_SOLACE_SOLACE_CLOUD_HOME }}"
    - set_fact:
        solace_cloud_api_token_us: "{{ SOLACE_CLOUD_API_TOKEN_US }}"
        solace_cloud_api_token_au: "{{ SOLACE_CLOUD_API_TOKEN_AU }}"
      no_log: yes

    - name: "Ensure {{ working_dir }} exists"
      file:
        path: "{{ working_dir }}"
        state: directory
      delegate_to: localhost

    - set_fact:
        created_services_dict: {}

    - name: "Check vars"
      assert:
        that:
          - solace_cloud_api_token_us is defined
          - solace_cloud_api_token_au is defined
          - working_dir is defined
          - env is defined
          - created_services_dict is defined
        fail_msg: "one or more variables not defined"

    - set_fact:
        solace_cloud_api_token: "{{solace_cloud_api_token_us}}"
        datacenterId: "aws-ca-central-1a"
      when: solace_cloud_home_cloud is not defined or solace_cloud_home_cloud == '' or solace_cloud_home_cloud == 'US'
      no_log: yes
    - set_fact:
        solace_cloud_api_token: "{{solace_cloud_api_token_au}}"
        # "datacenterId": "testenterpriseorg-gke-aus-se1-a",
        datacenterId: "solaceseaustralia-eks-ap-southeast-2"
      when:
        - "solace_cloud_home_cloud is defined"
        - "solace_cloud_home_cloud == 'AU'"
      no_log: yes
    - assert:
        that:
          - solace_cloud_api_token is defined
          - datacenterId is defined

    - name: "Solace Cloud Account: Gather Facts as Dict"
      solace_cloud_account_gather_facts:
        api_token: "{{ solace_cloud_api_token }}"
        account_name: "{{ inventory_hostname }}"
        return_format: dict
      register: solace_cloud_account_facts

    - name: "Save Facts dict: Solace Cloud Account"
      copy:
        content: "{{ solace_cloud_account_facts | to_nice_json }}"
        dest: "{{ working_dir }}/facts.dict.solace_cloud_account.{{ inventory_hostname }}.json"
      delegate_to: localhost

    - name: print data centers
      debug:
        msg:
        - "datacenters"
        - "{{ solace_cloud_account_facts.solace_cloud_account[inventory_hostname].data_centers }}"

    - name: "Solace Cloud Service: Create"
      include_tasks: ./tasks/setup.solace-cloud-service.yml
      register: create_task_result
      loop: "{{ sc_services.solace_cloud_services }}"
      loop_control:
        loop_var: sc_service

    - name: "Create services inventory"
      set_fact:
        sc_inventory: "{{ lookup('template', 'inventory.j2') | from_json }}"

    - name: "Save created services to {{ sc_created_inventory_file }}"
      copy:
        content: "{{ sc_inventory | to_nice_yaml(indent=2) }}"
        dest: "{{ sc_created_inventory_file }}"
      delegate_to: localhost

###
# The End.
