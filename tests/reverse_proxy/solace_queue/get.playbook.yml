# Copyright (c) 2021, Solace Corporation, Ricardo Gomez-Ulmke, <ricardo.gomez-ulmke@solace.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
-
  name: "get: solace_get_queues"
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  collections:
    - solace.pubsub_plus
  module_defaults:
    solace.pubsub_plus.solace_get_vpns:
      secure_connection: "{{ semp_is_secure_connection }}"
      host: "{{ semp_host }}"
      port: "{{ semp_port }}"
      username: "{{ semp_username }}"
      password: "{{ semp_password }}"
      timeout: "{{ semp_timeout }}"
      reverse_proxy: "{{ semp_reverse_proxy | default(omit) }}"
    solace.pubsub_plus.solace_queue:
      secure_connection: "{{ semp_is_secure_connection }}"
      host: "{{ semp_host }}"
      port: "{{ semp_port }}"
      username: "{{ semp_username }}"
      password: "{{ semp_password }}"
      timeout: "{{ semp_timeout }}"
      reverse_proxy: "{{ semp_reverse_proxy | default(omit) }}"
    solace.pubsub_plus.solace_get_queues:
      secure_connection: "{{ semp_is_secure_connection }}"
      host: "{{ semp_host }}"
      port: "{{ semp_port }}"
      username: "{{ semp_username }}"
      password: "{{ semp_password }}"
      timeout: "{{ semp_timeout }}"
      reverse_proxy: "{{ semp_reverse_proxy | default(omit) }}"
    solace.pubsub_plus.solace_queue_subscription:
      secure_connection: "{{ semp_is_secure_connection }}"
      host: "{{ semp_host }}"
      port: "{{ semp_port }}"
      username: "{{ semp_username }}"
      password: "{{ semp_password }}"
      timeout: "{{ semp_timeout }}"
      reverse_proxy: "{{ semp_reverse_proxy | default(omit) }}"
  pre_tasks:
  - include_vars:
      file: "queues.vars.yml"
      name: target_list
  tasks:
  - name: "get: get vpns"
    solace_get_vpns:
      query_params:
        select:
          - msgVpnName
    register: result
  - set_fact:
      msg_vpn: "{{ result.result_list[0].data.msgVpnName }}"

  - name: "get: call tasks: adding/updating queues"
    include_tasks: ./tasks/queue.tasks.yml
    loop: "{{ target_list.queues }}"
    loop_control:
      loop_var: queue_item

  - name: "get: solace_get_queues(config)"
    solace_get_queues:
      msg_vpn: "{{ msg_vpn }}"
      query_params:
        where:
          - queueName==asc/test/*
    register: result
  - assert:
      that:
        - result.result_list_count == target_list.queues|length

  - name: "get: solace_get_queues(monitor)"
    solace_get_queues:
      msg_vpn: "{{ msg_vpn }}"
      api: monitor
      query_params:
        where:
          - queueName==asc/test/*
    register: result
    ignore_errors: yes
  - assert:
      that:
        - result.result_list_count == target_list.queues|length
    when: result.rc == 0
  - assert:
      that:
        - "'resource not configured or blocked on the reverse proxy' in result.msg|string"
    when: result.rc == 1

###
# The End.
